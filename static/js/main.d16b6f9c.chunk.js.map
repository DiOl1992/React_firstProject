{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","liked","allPosts","className","SearchPanel","props","state","term","onUpdateSearch","bind","e","target","value","this","setState","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","map","filter","onFilterSelect","clazz","onClick","PostListItem","onDelete","onToggleImportant","onToggleLike","classNames","important","like","PostList","posts","elements","item","id","itemProps","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","App","data","deleteItem","addItem","maxId","index","findIndex","elem","before","slice","after","body","newItem","old","items","length","indexOf","visiblePosts","filterPosts","searchPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d16b6f9c.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\nexport default AppHeader;","import React from 'react';\r\n\r\n\r\nimport './app-header.css';\r\n// import styled from 'styled-components';\r\n\r\n// const Header = styled.div`\r\n//     display: flex;\r\n//     align-items: flex-end;\r\n//     justify-content: space-between;\r\n//     h1 {\r\n//         font-size: 26px;\r\n//         color: ${props => props.colored ? 'red' : 'black'};\r\n//         :hover{\r\n//             color: blue;\r\n//         }\r\n//     }\r\n//     h2 {\r\n//         font-size: 1.2rem;\r\n//         color: grey;\r\n//     }\r\n \r\n// `\r\n\r\nconst AppHeader = ({liked, allPosts}) => {\r\n    return (\r\n        <div className=\"app-header\">\r\n            <h1>Diana Gerasimova</h1>\r\n            <h2>{allPosts} записей, из них понравилось {liked}</h2>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            term: ''\r\n        }\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    }\r\n\r\n    onUpdateSearch(e){\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onUpdateSearch(term);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <input\r\n                className=\"form-control search-input\"\r\n                type=\"text\"\r\n                placeholder=\"Поиск по записям\"\r\n                onChange={this.onUpdateSearch}\r\n            />\r\n        )\r\n    }\r\n    \r\n    \r\n}\r\n\r\n\r\n","import PostStatusFilter from './post-status-filter';\r\nexport default PostStatusFilter;","import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport './post-status-filter.css';\r\n\r\nexport default class PostStatusFilter extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.buttons = [\r\n            {name: 'all', label: 'Все'},\r\n            {name: 'like', label: 'Понравилось'},\r\n        ]\r\n    }\r\n\r\n    render(){\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const {filter, onFilterSelect} = this.props;\r\n            const active = filter === name;\r\n            const clazz = active ? 'btn-info' : 'btn-outline-secondary'\r\n            return(\r\n                <button \r\n                key={name} \r\n                type='button' \r\n                className={`btn ${clazz}`}\r\n                onClick={() => onFilterSelect(name)}\r\n                >\r\n                {label}\r\n                </button>\r\n            )\r\n        });\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n   \r\n}\r\n","import PostListItem from './post-list-item';\r\nexport default PostListItem;","import React, {Component} from 'react';\r\n\r\nimport './post-list-item.css';\r\n\r\nexport default class PostListItem extends Component{\r\n   \r\n\r\n    render(){\r\n        const {label, onDelete, onToggleImportant, onToggleLike, important, like} = this.props;\r\n\r\n        let classNames = 'app-list-item d-flex justify-content-between';\r\n        if (important) {\r\n            classNames += ' important';\r\n        }\r\n\r\n        if (like) {\r\n            classNames += ' like';\r\n        }\r\n\r\n        return(\r\n            <div className={classNames}>\r\n                <span \r\n                className=\"app-list-item-label\"\r\n                onClick={onToggleLike}>\r\n                    {label}\r\n                </span>\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn-star btn-sm\"\r\n                        onClick={onToggleImportant}>\r\n                        <i className=\"fa fa-star\"></i>\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn-trash btn-sm\"\r\n                        onClick={onDelete}\r\n                        >\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                    </button>\r\n                    <i className=\"fa fa-heart\"></i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import PostList from './post-list';\r\nexport default PostList;","import React from 'react';\r\n\r\nimport PostListItem from '../post-list-item';\r\n\r\n\r\nimport './post-list.css';\r\n\r\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLike}) => {\r\n\r\n    const elements = posts.map((item) => {\r\n        const {id, ...itemProps} = item;\r\n        return(\r\n            <li key={id} className='list-group-item'>\r\n                <PostListItem \r\n                    {...itemProps}\r\n                    onDelete={() => onDelete(id)}\r\n                    onToggleImportant = {() => onToggleImportant(id)}\r\n                    onToggleLike = {() => onToggleLike(id)}\r\n                // label={item.label} \r\n                // important={item.important}\r\n                />\r\n            </li>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <ul className=\"app-list\">\r\n            {elements}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default PostList;","import PostAddForm from './post-add-form';\r\nexport default PostAddForm;","import React, { Component } from 'react';\r\n\r\nimport './post-add-form.css';\r\n\r\nexport default class PostAddForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            text: ''\r\n        }\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onValueChange(e){\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        this.props.onAdd(this.state.text);\r\n        this.setState({\r\n            text: ''\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <form \r\n            className=\"bottom-pannel d-flex\"\r\n            onSubmit={this.onSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"О чем Вы думаете сейчас?\"\r\n                    className=\"form-control new-post-lsbel\"\r\n                    onChange={this.onValueChange}\r\n                    value={this.state.text}\r\n                />\r\n                <button \r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-secondary\"\r\n                    >\r\n                    Добавить\r\n    \r\n    \r\n                </button>\r\n    \r\n            </form>\r\n        )\r\n    }\r\n  \r\n}\r\n","import App from './app'\r\nexport default App;","import React, {Component} from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport PostStatusFilter from '../post-status-filter';\r\nimport PostList from '../post-list';\r\nimport PostAddForm from '../post-add-form';\r\n\r\nimport './app.css';\r\n// import styled from 'styled-components';\r\n\r\n// const AppBlock = styled.div`\r\n//     margin: 0 auto;\r\n//     max-width: 800px;\r\n// `\r\n\r\nexport default class App extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            //данные передаются от сервера\r\n            data : [\r\n                {label: 'Diana is beautiful name', important: true, like:false, id: 1},\r\n                {label: 'Olga is beautiful name', important: false, like:false, id: 2},\r\n                {label: 'Maya is beautiful name', important: false, like:false, id: 3}\r\n            ],\r\n            term: '',\r\n            filter: 'all'\r\n        };\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onToggleImportant = this.onToggleImportant.bind(this);\r\n        this.onToggleLike = this.onToggleLike.bind(this);\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n        this.onFilterSelect = this.onFilterSelect.bind(this);\r\n\r\n\r\n        this.maxId = 4;\r\n    }\r\n\r\n    deleteItem(id){\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            \r\n            const before = data.slice(0, index);\r\n            const after = data.slice(index + 1);\r\n\r\n            const newArr = [...before, ...after];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    addItem(body){\r\n        const newItem = {\r\n            label: body,\r\n            important: false,\r\n            id: this.maxId++\r\n        }\r\n        this.setState(({data}) => {\r\n            const newArr = [...data, newItem];\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    onToggleImportant(id){\r\n        this.setState(({data}) =>{\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, important: !old.important};\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n\r\n            return{\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    onToggleLike(id){\r\n        this.setState(({data}) =>{\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, like: !old.like};\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n\r\n            return{\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    searchPost(items, term){\r\n        if(term.length === 0){\r\n            return items\r\n        }\r\n\r\n        return items.filter( (item) => {\r\n            return item.label.indexOf(term) > -1\r\n        });\r\n    }\r\n\r\n    filterPosts(items, filter){\r\n        if(filter === 'like'){\r\n            return items.filter(item => item.like)\r\n        } else{\r\n            return items\r\n        }\r\n    }\r\n\r\n    onUpdateSearch(term){\r\n        this.setState({term})\r\n    }\r\n\r\n    onFilterSelect(filter){\r\n        this.setState({filter})\r\n    }\r\n\r\n    render(){\r\n        const {data, term, filter} = this.state;\r\n\r\n        const liked = data.filter(item => item.like).length;\r\n        const allPosts = data.length;\r\n\r\n        const visiblePosts = this.filterPosts(this.searchPost(data, term), filter);\r\n\r\n        return (\r\n            <div className=\"app\">\r\n                <AppHeader\r\n                    liked={liked}\r\n                    allPosts={allPosts}\r\n                    />\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel\r\n                    onUpdateSearch={this.onUpdateSearch}\r\n                    />\r\n                    <PostStatusFilter\r\n                    filter={filter}\r\n                    onFilterSelect = {this.onFilterSelect}/>\r\n                </div>\r\n                <PostList \r\n                    posts={visiblePosts}\r\n                    onDelete={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleLike={this.onToggleLike}/>\r\n                <PostAddForm\r\n                  onAdd={this.addItem}/>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n   \r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './components/app/';\n\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}